{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifFridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","elementos","type","placeholder","value","onChange","target","onFocus","version","viewBox","width","height","aria-hidden","d","getGifs","category","a","url","encodeURI","fetch","resp","json","results","gifs","map","img","id","title","alt_description","urls","thumb","GifFridItem","src","alt","GifGrid","data","loading","state","setState","useEffect","then","imgs","useFectchGifs","images","key","GifApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAkDeA,EA/CK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KA6BzC,OACI,0BAAMC,UAAU,WAAWC,SAtBV,SAAEC,GACnBA,EAAEC,iBAOGL,EAAWM,OAAOC,OAAS,IAE5BT,GAAe,SAAAU,GAAS,OAAMR,GAAN,mBAAqBQ,OAC7CP,EAAe,OAYjB,2BACEQ,KAAK,OACLC,YAAa,uBACbC,MAAQX,EACRY,SA/BkB,SAAER,GACxBH,EAAeG,EAAES,OAAOF,QA+BpBG,QAZiB,WACrBb,EAAe,OAab,yBAAKC,UAAU,OAAOa,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAKC,cAAY,SAAQ,0BAAMC,EAAE,8H,uBCxCxGC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,wDAE2CC,UAAWH,GAFtD,2GAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAKOA,EAAKC,OALZ,uBAKXC,EALW,EAKXA,QAIFC,EAAOD,EAAQE,KAAM,SAAAC,GAAQ,IAAD,EAE9B,MAAO,CAEHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIG,gBACXX,IAAG,UAAEQ,EAAII,YAAN,aAAE,EAAUC,UAfJ,kBAwBZP,GAxBY,4CAAH,sDCCPQ,EAAc,SAAC,GAAyB,EAAtBL,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,yBAAKtB,UAAU,0CAEX,yBAAKqC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCNJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EAEfvB,mBAAS,CAC/B2C,KAAM,GACNC,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAsBzC,OAfAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHH,EAAS,CACLH,KAAMM,EACNL,SAAS,SAKtB,CAAErB,IAGEsB,EDnB2BK,CAAe3B,GAApC4B,EAFwB,EAE7BR,KAAcC,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIzC,UAAU,oCAAd,IAAoDyC,EAAU,eAAiBrB,EAA/E,KAEA,yBAAKpB,UAAU,aAEPgD,EAAOnB,KAAK,SAAEC,GAAF,OAER,kBAAC,EAAD,eACImB,IAAMnB,EAAIC,IACLD,UE6BlBoB,EA1CA,SAAAC,GAAS,MAGgBtD,mBAAS,CAAC,KAH1B,mBAGbuD,EAHa,KAGDxD,EAHC,KAapB,OACI,oCACI,kDACA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEA,4BAEQwD,EAAWvB,KAAK,SAAAT,GAEZ,OAAO,kBAAC,EAAD,CACH6B,IAAM7B,EACNA,SAAWA,UCzBvCiC,IAASC,OACP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.9b0d9adc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        // hace que al presionar intro o hacer submit\n        // en el formulario no se dispare el evento por defecto\n        // refrescando la página\n\n        // console.log(inputValue.trim().length);\n\n        if ( inputValue.trim().length > 1 ) {\n\n            setCategories( elementos => [ inputValue, ...elementos ] );\n            setInputValue( '' );\n        }\n\n    }\n\n    const handleInputClear = () => {\n        setInputValue( '' );\n    }\n\n\n    return (\n        <form className=\"buscador\" onSubmit={ handleSubmit }>\n          <input\n            type=\"text\"\n            placeholder= \"Search images of ...\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n            onFocus={ handleInputClear }\n          />\n          <svg className=\"lupa\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"20\" height=\"20\" aria-hidden=\"false\"><path d=\"M31 28.64l-7.57-7.57a12.53 12.53 0 1 0-2.36 2.36l7.57 7.57zm-17.5-6a9.17 9.17 0 1 1 6.5-2.64 9.11 9.11 0 0 1-6.5 2.67z\"></path></svg>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\nexport const getGifs = async( category ) => {\n    // const url = 'https://api.unsplash.com/search/photos/?query=nature&page=1&per_page=9&client_id=3d4a2ea5ae14623132c311f9eca021c616b9c73ab517a25f5e047870a7ba29fc';\n    const url = `https://api.unsplash.com/search/photos/?query=${ encodeURI( category ) }&page=1&per_page=20&client_id=3d4a2ea5ae14623132c311f9eca021c616b9c73ab517a25f5e047870a7ba29fc`;\n    const resp = await fetch( url );\n\n    const { results } = await resp.json();\n    // utilizando la desestructuración estamos llamando\n    // solamente a la variable results de la respuesta\n\n    const gifs = results.map ( img => {\n\n        return {\n\n            id : img.id,\n            title: img.alt_description,\n            url: img.urls?.thumb  // urls.small, urls.regular, urls.full,\n            // el signo ? es para preguntar a la petición que si trae\n            // el parámetro urls continue con el siguiente parámetro\n            // .small y si no viene pues que no continue así no nos devuelve un undefined \n        }\n    })\n\n    // console.log( gifs );\n    // setImages( gifs );\n    return gifs;\n}","import React from 'react'\n\nexport const GifFridItem = ( { id, title, url } ) => {\n\n    // console.log(  id, title, url  );\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            {/* { img.title } */}\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFectchGifs } from '../hooks/useFecthGifs';\nimport { GifFridItem } from './GifFridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images , loading } = useFectchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__flash\"> { loading ? ' loading ...' : category } </h3>\n            {/* { loading && <p>Loading ...</p> } */}\n            <div className=\"cardGrill\">\n                {\n                    images.map( ( img ) => (\n                        \n                        <GifFridItem\n                            key= {img.id}\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFectchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n\n            })\n\n    }, [ category ])\n\n\n    return state;   // { data: [], loading: true }\n\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifApp = props => {\n\n    // const [categories, setCategories] = useState(['Nature','Spirituality','Animals']);\n    const [categories, setCategories] = useState(['']);\n    // const handleAdd = () => {\n\n    //     // categories.push('Textures');\n    //     // console.log( categories );\n    //     // setCategories([...categories, 'Textures']);\n    //     setCategories( elementos => [ ...elementos, 'Textures' ] );\n    // };\n\n    // const categories = ['Nature','Spirituality','Animals'];\n    return (\n        <>\n            <h2>Search20images App</h2>\n            <AddCategory setCategories={ setCategories } />\n\n            <hr />\n            {/* <button onClick={ handleAdd }>Añadir Categoría</button> */}\n            <ol>\n                {\n                    categories.map( category => {\n                        // return <GifGrid <li key={ category }> { category } </li>;\n                        return <GifGrid \n                            key={ category }\n                            category={ category } \n                            />;\n                    })\n                }\n                \n            </ol>\n\n            \n        </>\n    )\n}\n\nGifApp.propTypes = {\n\n}\n\nexport default GifApp\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n// import ImageRandom from './ImageRandom';\n\nReactDOM.render(\n  <GifApp />,\n  // <ImageRandom />,\n  document.getElementById('root')\n);\n\n\n// GifApp\n// <h2>GifApp</h2>\n// <hr />\n"],"sourceRoot":""}